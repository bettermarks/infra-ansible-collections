---
- name: Create BBB basic auth credentials secret
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ kubeconfig }}"
    definition:
      apiVersion: onepassword.com/v1
      kind: OnePasswordItem
      metadata:
        name: bbb-node-exporter-basic-auth
        namespace: monitoring
      spec:
        itemPath: "vaults/{{ vault }}/items/{{ bbb_node_exporter_basic_auth_secret_name }}"
  when: bbb_server_count is defined

- name: Create BBB scrape config configmap
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ kubeconfig }}"
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: bbb-scrape-config
        namespace: monitoring
      data:
        bbb.yml: |-
          - targets:
          {% for n in range(bbb_server_count) %}
          {% if bbb_ebbba_exporters %}
              - 'bbb-{{ n+1 }}.{{ bbb_domain_name }}'
          {% else %}
              - 'bbb-{{ n+1 }}.{{ bbb_domain_name }}:9100'
              - 'bbb-{{ n+1 }}.{{ bbb_domain_name }}:9688'
          {% endif %}
          {% endfor %}
        bbb-turn-node-exporter.yml: |-
          - targets:
          {% for n in range(bbb_turn_server_count) %}
              - 'turn-{{  '%02d' | format(n+1|int) }}.{{ bbb_domain_name }}:9100'
          {% endfor %}
        bbb-turn-coturn-exporter.yml: |-
          - targets:
          {% for n in range(bbb_turn_server_count) %}
          {% if bbb_turn_server_exporter_enabled %}
              - 'turn-{{  '%02d' | format(n+1|int) }}.{{ bbb_domain_name }}:9642'
          {% endif %}
          {% endfor %}
  when: bbb_server_count is defined

- name: Create BBB endpoint for autoscaler
  kubernetes.core.k8s:
    state: "{{ 'present' if bbb_ip_addresses is defined else 'absent' }}"
    kubeconfig: "{{ kubeconfig }}"
    definition:
      apiVersion: v1
      kind: Endpoints
      metadata:
        name: bbb-autoscaler
        namespace: monitoring
        labels:
          k8s-app: bbb-metrics
      subsets:
        - addresses: "{{ bbb_ip_addresses[:bbb_server_count] if bbb_ip_addresses is defined \
            and bbb_server_count is defined else [] }}"
          ports:
            - name: node-exporter
              port: 9100
            - name: https
              port: 443

- name: Create BBB service for autoscaler
  kubernetes.core.k8s:
    state: "{{ 'present' if bbb_ip_addresses is defined else 'absent' }}"
    kubeconfig: "{{ kubeconfig }}"
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: bbb-autoscaler
        namespace: monitoring
        labels:
          k8s-app: bbb-metrics
      spec:
        clusterIp: None
        ports:
          - name: node-exporter
            port: 9100
          - name: https
            port: 443

- name: Create BBB service monitor for autoscaler
  kubernetes.core.k8s:
    state: "{{ 'present' if bbb_ip_addresses is defined else 'absent' }}"
    kubeconfig: "{{ kubeconfig }}"
    definition:
      apiVersion: monitoring.coreos.com/v1
      kind: ServiceMonitor
      metadata:
        name: bbb-service-monitor
        namespace: monitoring
      spec:
        selector:
          matchLabels:
            k8s-app: bbb-metrics
        namespaceSelector:
          any: false
          matchNames:
            - monitoring
        endpoints:
          - basicAuth:
              password:
                name: bbb-node-exporter-basic-auth
                key: password
              username:
                name: bbb-node-exporter-basic-auth
                key: username
            path: "{{ '/mon/node/' if bbb_ebbba_exporters else '/metrics' }}"
            interval: 30s
            honorLabels: true
            port: "{{ 'https' if bbb_ebbba_exporters else 'node-exporter' }}"
            scheme: https
            tlsConfig:
              insecureSkipVerify: true
