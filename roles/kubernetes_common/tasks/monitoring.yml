---
- name: Create monitoring namespace
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ kubeconfig }}"
    api_version: v1
    name: monitoring
    kind: Namespace

- name: Add metrics-server chart repo
  kubernetes.core.helm_repository:
    name: metrics-server
    repo_url: "https://kubernetes-sigs.github.io/metrics-server/"

- name: Install Metrics Server
  kubernetes.core.helm:
    name: metrics-server
    chart_ref: metrics-server/metrics-server
    update_repo_cache: true
    wait: true
    chart_version: "{{ metrics_server_chart_version }}"
    kubeconfig: "{{ kubeconfig }}"
    release_namespace: kube-system
    values:
      "{{ metrics_server_values }}"

- name: Add prometheus-community chart repo
  kubernetes.core.helm_repository:
    name: prometheus-community
    repo_url: "https://prometheus-community.github.io/helm-charts"
  tags: prometheus
#  See https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-prometheus-stack for the right operator version
- name: Deploy prometheus operator CRD alertmanagerconfigs
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ kubeconfig }}"
    definition: lookup('ansible.builtin.url', "https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v{{ prometheus_community_operator_version }}/example/prometheus-operator-crd/monitoring.coreos.com_alertmanagerconfigs.yaml")
  tags: prometheus

- name: Deploy prometheus operator CRD alertmanagers
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ kubeconfig }}"
    definition: lookup('ansible.builtin.url', "https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v{{ prometheus_community_operator_version }}/example/prometheus-operator-crd/monitoring.coreos.com_alertmanagers.yaml")
  tags: prometheus

- name: Deploy prometheus operator CRD podmonitors
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ kubeconfig }}"
    definition: lookup('ansible.builtin.url', "https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v{{ prometheus_community_operator_version }}/example/prometheus-operator-crd/monitoring.coreos.com_podmonitors.yaml")
  tags: prometheus

- name: Deploy prometheus operator CRD probes
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ kubeconfig }}"
    definition: lookup('ansible.builtin.url', "https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v{{ prometheus_community_operator_version }}/example/prometheus-operator-crd/monitoring.coreos.com_probes.yaml")
  tags: prometheus

- name: Deploy prometheus operator CRD prometheuses
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ kubeconfig }}"
    definition: lookup('ansible.builtin.url', "https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v{{ prometheus_community_operator_version }}/example/prometheus-operator-crd/monitoring.coreos.com_prometheuses.yaml")
  tags: prometheus

- name: Deploy prometheus operator CRD prometheusrules
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ kubeconfig }}"
    definition: lookup('ansible.builtin.url', "https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v{{ prometheus_community_operator_version }}/example/prometheus-operator-crd/monitoring.coreos.com_prometheusrules.yaml")
  tags: prometheus

- name: Deploy prometheus operator CRD servicemonitors
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ kubeconfig }}"
    definition: lookup('ansible.builtin.url', "https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v{{ prometheus_community_operator_version }}/example/prometheus-operator-crd/monitoring.coreos.com_servicemonitors.yaml")
  tags: prometheus

- name: Deploy prometheus operator CRD thanosrulers
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ kubeconfig }}"
    definition: lookup('ansible.builtin.url', "https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v{{ prometheus_community_operator_version }}/example/prometheus-operator-crd/monitoring.coreos.com_thanosrulers.yaml")
  tags: prometheus

- name: Install Prometheus Stack
  kubernetes.core.helm:
    name: monitoring
    chart_ref: prometheus-community/kube-prometheus-stack
    update_repo_cache: true
    chart_version: "{{ prometheus_community_chart_version }}"
    kubeconfig: "{{ kubeconfig }}"
    release_namespace: monitoring
    wait: true
    wait_timeout: 1200s
    values:
      "{{ prometheus_community_values }}"
  tags: prometheus

- name: Create vminsert-credentials secret
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ kubeconfig }}"
    definition:
      apiVersion: onepassword.com/v1
      kind: OnePasswordItem
      metadata:
        name: vminsert-credentials
        namespace: monitoring
      spec:
        itemPath: "vaults/{{ vault }}/items/victoriametrics"

- name: Deploy Configmap for Loki load test
  kubernetes.core.k8s:
    state: "{{ 'present' if loki_load_test.enabled else 'absent' }}"
    kubeconfig: "{{ kubeconfig }}"
    definition:
      kind: ConfigMap
      apiVersion: v1
      metadata:
        name: loki-load-test
        namespace: default
      data:
        sample.log: "{{ lookup('file', 'loki-load-test-sample.log') }}"
        ocp-logtest.py: "{{ lookup('file', 'ocp-logtest.py') }}"
  tags: loki-load-test

- name: Deploy Loki load test
  kubernetes.core.k8s:
    state: "{{ 'present' if loki_load_test.enabled else 'absent' }}"
    kubeconfig: "{{ kubeconfig }}"
    template: loki-load-test.yml.j2
  tags: loki-load-test
